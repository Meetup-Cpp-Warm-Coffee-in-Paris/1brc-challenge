// Build instructions
// tasks.json allows to define and chain arbitrary shell commands or programs together and run them from the VS Code UI.
{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Clean Build Folder",
            "type": "shell",
            "command": "rm -r ${workspaceFolder}/build",
            "problemMatcher": [],
        },
        // TEST RELEASE
        {
            "label": "Configure Conan (Release)",
            "type": "shell",
            "command": "conan install conanfile.py --profile:build=conan/profiles/linux-x86-gcc13-release --profile:host=conan/profiles/linux-x86-gcc13-release --build=missing --output-folder=build",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "dependsOn": [],
        },
        {
            "label": "Configure CMake (Release)",
            "type": "shell",
            "command": "cmake -B ${workspaceFolder}/build -S . -DCMAKE_BUILD_TYPE=Release --toolchain ${workspaceFolder}/build/conan_toolchain.cmake",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "dependsOn": ["Configure Conan (Release)"],
        },
        {
            "label": "Build Unit Tests (Release)",
            "type": "shell",
            "command": "cmake --build ${workspaceFolder}/build --config Release",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "dependsOn": ["Configure CMake (Release)"],
        },
        {
            "label": "Run Unit Tests (Release)",
            "type": "shell",
            "command": "cd ${workspaceFolder}/build && ctest -C Release --rerun-failed --output-on-failure",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": [],
            "dependsOn": ["Build Unit Tests (Release)"],
        },
        // TEST DEBUG
        {
            "label": "Configure Conan (Debug)",
            "type": "shell",
            "command": "conan install conanfile.py --profile:build=conan/profiles/linux-x86-gcc13-debug --profile:host=conan/profiles/linux-x86-gcc13-debug --build=missing --output-folder=build",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "dependsOn": [],
        },
        {
            "label": "Configure CMake (Debug)",
            "type": "shell",
            "command": "cmake -B ${workspaceFolder}/build -S . -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON --toolchain ${workspaceFolder}/build/conan_toolchain.cmake",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "dependsOn": ["Configure Conan (Debug)"],
        },
        {
            "label": "Build Unit Tests (Debug)",
            "type": "shell",
            "command": "cmake --build ${workspaceFolder}/build --config Debug",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "dependsOn": ["Configure CMake (Debug)"],
        },
        {
            "label": "Run Unit Tests (Debug)",
            "type": "shell",
            "command": "cd ${workspaceFolder}/build && ctest -C Debug --rerun-failed --output-on-failure",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": [],
            "dependsOn": ["Build Unit Tests (Debug)"],
        },
        // TEMPLATE PROJECT
        {
            "label": "Configure CMake Template (Debug)",
            "type": "shell",
            "command": "cmake -B ${workspaceFolder}/build -S . -DCMAKE_BUILD_TYPE=Debug --toolchain ${workspaceFolder}/build/conan_toolchain.cmake",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "dependsOn": ["Configure Conan (Debug)"],
        },
        {
            "label": "Build Template Project (Debug)",
            "type": "shell",
            "command": "cd ${workspaceFolder}/build && cmake --build . ",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "dependsOn": ["Configure CMake Template (Debug)"],
        },
        {
            "label": "Run Template Project (Debug)",
            "type": "shell",
            "command": "cd ${workspaceFolder}/build/template && ./main ",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "dependsOn": ["Build Template Project (Debug)"],
            "problemMatcher": [],
        },
        // DOCUMENTATION
        {
            "label": "Make Docs",
            "type": "shell",
            "command": "cd ${workspaceFolder}/build && make docs ",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "dependsOn": ["Run Unit Tests (Debug)"],
        },
    ]
}